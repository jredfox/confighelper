#<file.cfg or script>:<cat or script>:<property name or script>:<dataType> for auto properties that count is 1 and shift is 0
#<file.cfg or script>:<cat or script>:<property name or script>:<dataType>:<int count>:<int shift>

Examples:
*:@'item'|@'items'|@'item ids':*:itemId:1:0
*:@'block'|@'blocks'|@'block ids':*:blockId:1:0
*:@'biomes'|@'biomes.biome ids'|@'biomes.sub-biome ids':*:biomeId:1:0
*:@'enchantment'|@'custom enchantments':*:enchantmentId:1:0
Colorful_Armor.cfg:*:*:itemId:1:0
Colorful_Armor.cfg:*:%s'Boots'|%s'Leggings'|%s'Chest'|%s'Helmet':itemId:1:0
tropicraft/ModIds.cfg:*:%s'ITEM_'%e'_ID':itemId:1:0
tropicraft/ModIds.cfg:*:%s'BLOCK_'%e'_ID':blockId:1:0
tropicraft/ModIds.cfg:*:%s'ENCHANTMENT_':enchantment:1:0
LionKing.cfg:items:*:itemId:1:256
coloredblocksmod.cfg:%sitems:IDS:itemId:50:0 #as this takes up 50 places

list of domains to pull configs from:
root/config
root if enabled
specified paths

list of extensions: 
txt, cfg

rules:
- all scripts are just a boolean to determine if the property should get configured
- order is configuration hooks(item / block) as the first script to ensure it will always get done
- the shift is overriden by the last script != 0 or 0 if none are found
- the count is overriden by the last script > 1 or 1 if none are found
- all strings are lowercased if enabled to ensure user friendly scripting
- count must be > 0
- if you don't have the desired output you made your scripts not specific enough or simply have them in the wrong order

opperands for scripting:
%s = starts with
%e = ends with
%c = contains
| = the or opperand this starts the next statement
! = not opperand
* = applied as the script itself to always return true
' = a string with spacing support
@ = equals a string use when scripting operands > 1
+ = regex expresion for the entire string
# = comments the rest of the entire line out

illegal opperand appending:
@ & @
& &
! !
! *

illegal scripting:
*:*:* because any file with any category with any property name cannot be determined for a specified data type
